services:
  frontend:
    build:
      context: ./angular-frontend
      dockerfile: Dockerfile
    deploy:
      replicas: 3
    expose:
      - "80"
    restart: always
    networks:
      - hangman_network

  backend-master:
    container_name: hangman-backend-1
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    environment:
      INIT_DATABASE: "true"
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/${HANGMAN_DB}
      SPRING_DATASOURCE_USERNAME: ${HANGMAN_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${HANGMAN_DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    expose:
      - "8080"
    restart: always
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - hangman_network

  backend-replica1:
    container_name: hangman-backend-2
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/${HANGMAN_DB}
      SPRING_DATASOURCE_USERNAME: ${HANGMAN_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${HANGMAN_DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    expose:
      - "8080"
    restart: always
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - hangman_network

  backend-replica2:
    container_name: hangman-backend-3
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/${HANGMAN_DB}
      SPRING_DATASOURCE_USERNAME: ${HANGMAN_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${HANGMAN_DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    expose:
      - "8080"
    restart: always
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - hangman_network

  mysqldb:
    image: mysql:8.0
    container_name: hangman-mysqldb
    environment:
      MYSQL_DATABASE: ${HANGMAN_DB}
      MYSQL_USER: ${HANGMAN_DB_USER}
      MYSQL_PASSWORD: ${HANGMAN_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${HANGMAN_DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hangman_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  nginx:
    image: nginx:latest
    container_name: hangman-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend-master
      - backend-replica1
      - backend-replica2
    networks:
      - hangman_network
    restart: always

  monitor:
    container_name: hangman-container-monitor
    build:
      context: ./monitor
      dockerfile: Dockerfile
    volumes:
      - ./monitor:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - nginx
    restart: always

volumes:
  mysql_data:

networks:
  hangman_network:
    driver: bridge
