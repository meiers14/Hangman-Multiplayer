services:
  frontend:
    container_name: frontend
    build:
      context: ./angular-frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"

  backend1:
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    restart: always
    container_name: backend-1
    ports:
      - "8082:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/mydatabase
      spring.datasource.username: myuser
      spring.datasource.password: secret
      spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
      spring.jpa.hibernate.ddl-auto: update
    depends_on:
      mysqldb:
        condition: service_healthy

  backend2:
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    restart: always
    container_name: backend-2
    ports:
      - "8083:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/mydatabase
      spring.datasource.username: myuser
      spring.datasource.password: secret
      spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
      spring.jpa.hibernate.ddl-auto: update
    depends_on:
      mysqldb:
        condition: service_healthy

  backend3:
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    restart: always
    container_name: backend-3
    ports:
      - "8085:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/mydatabase
      spring.datasource.username: myuser
      spring.datasource.password: secret
      spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
      spring.jpa.hibernate.ddl-auto: update
    depends_on:
      mysqldb:
        condition: service_healthy

  mysqldb:
    image: mysql:8.0
    restart: always
    container_name: mysqldb
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: verysecret
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      - backend1
      - backend2
      - backend3

volumes:
  mysql_data:
